{"version":3,"file":"static/js/71.d3f2d07f.chunk.js","mappings":"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","sources":["components/Resume/Education/Degree.js","components/Resume/Education.js","components/Resume/Experience/Job.js","components/Resume/Experience.js","components/Resume/Courses/Course.js","components/Resume/Courses.js","components/Resume/References.js","data/resume/degrees.js","data/resume/positions.js","data/resume/projects.js","components/Resume/Projects/Project.js","components/Resume/Projects.js","../node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","data/resume/skills.js","../node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","pages/Resume.js","../node_modules/@babel/runtime/helpers/esm/defineProperty.js","../node_modules/@babel/runtime/helpers/esm/objectSpread2.js"],"sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Degree = ({ data }) => (\n  <article className=\"degree-container\">\n    <header>\n      <h4 className=\"degree\">{data.degree}</h4>\n      <p className=\"school\"><a href={data.link}>{data.school}</a>, {data.year}</p>\n      {/* <p className=\"school\">{data.relevantCoursework}</p> */}\n    </header>\n  </article>\n);\n\nDegree.propTypes = {\n  data: PropTypes.shape({\n    degree: PropTypes.string.isRequired,\n    link: PropTypes.string.isRequired,\n    school: PropTypes.string.isRequired,\n    year: PropTypes.number.isRequired,\n    relevantCoursework: PropTypes.string,\n  }).isRequired,\n};\n\nexport default Degree;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Degree from './Education/Degree';\n\nconst Education = ({ data }) => (\n  <div className=\"education\">\n    <div className=\"link-to\" id=\"education\" />\n    <div className=\"title\">\n      <h3>Education</h3>\n    </div>\n    {data.map((degree) => (\n      <Degree\n        data={degree}\n        key={degree.school}\n      />\n    ))}\n  </div>\n);\n\nEducation.propTypes = {\n  data: PropTypes.arrayOf(PropTypes.shape({\n    school: PropTypes.string,\n    degree: PropTypes.string,\n    link: PropTypes.string,\n    year: PropTypes.number,\n    relevantCoursework: PropTypes.string,\n  })),\n};\n\nEducation.defaultProps = {\n  data: [],\n};\n\nexport default Education;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Job = ({ data }) => (\n  <article className=\"jobs-container\">\n    <header>\n      <h4>\n        { data.link ? <a href={data.link}>{data.company}</a> : data.company } - {data.position}\n      </h4>\n      <p className=\"daterange\"> {data.daterange}</p>\n    </header>\n    <ul className=\"points\">\n      {data.points.map((point) => (\n        <li key={point}>{point}</li>\n      ))}\n    </ul>\n  </article>\n);\n\nJob.propTypes = {\n  data: PropTypes.shape({\n    link: PropTypes.string,\n    company: PropTypes.string.isRequired,\n    position: PropTypes.string.isRequired,\n    daterange: PropTypes.string.isRequired,\n    points: PropTypes.arrayOf(PropTypes.string).isRequired,\n  }).isRequired,\n};\n\nexport default Job;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Job from './Experience/Job';\n\nconst Experience = ({ data }) => (\n  <div className=\"experience\">\n    <div className=\"link-to\" id=\"experience\" />\n    <div className=\"title\">\n      <h3>Experience</h3>\n    </div>\n    {data.map((job) => (\n      <Job\n        data={job}\n        key={job.company}\n      />\n    ))}\n  </div>\n);\n\nExperience.propTypes = {\n  data: PropTypes.arrayOf(PropTypes.shape({\n    company: PropTypes.string,\n    position: PropTypes.string,\n    link: PropTypes.string,\n    daterange: PropTypes.string,\n    points: PropTypes.arrayOf(PropTypes.string),\n  })),\n};\n\nExperience.defaultProps = {\n  data: [],\n};\n\nexport default Experience;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Course = ({ data, last }) => (\n  <li className=\"course-container\">\n    <p className=\"course-name\">{data.title}</p>\n    {!last && <div className=\"course-dot\"><p className=\"course-name\"> &#8226;</p></div>}\n  </li>\n);\n\nCourse.propTypes = {\n  data: PropTypes.shape({\n    link: PropTypes.string,\n    number: PropTypes.string,\n    title: PropTypes.string.isRequired,\n  }).isRequired,\n  last: PropTypes.bool,\n};\n\nCourse.defaultProps = {\n  last: false,\n};\n\nexport default Course;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Course from './Courses/Course';\n\nconst getRows = (courses) => courses.sort((a, b) => {\n  let ret = 0;\n  if (a.university > b.university) ret = -1;\n  else if (a.university < b.university) ret = 1;\n  else if (a.number > b.number) ret = 1;\n  else if (a.number < b.number) ret = -1;\n  return ret;\n}).map((course, idx) => (\n  <Course\n    data={course}\n    key={course.title}\n    last={idx === courses.length - 1}\n  />\n));\n\nconst Courses = ({ data }) => (\n  <div className=\"courses\">\n    <div className=\"link-to\" id=\"courses\" />\n    <div className=\"title\">\n      <h3>Skills</h3>\n    </div>\n    <ul className=\"course-list\">\n      {getRows(data)}\n    </ul>\n  </div>\n);\n\nCourses.propTypes = {\n  data: PropTypes.arrayOf(PropTypes.shape({\n    title: PropTypes.string,\n  })),\n};\n\nCourses.defaultProps = {\n  data: [],\n};\n\nexport default Courses;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst References = () => (\n  <div className=\"references\">\n    <div className=\"link-to\" id=\"references\" />\n    <div className=\"title\">\n      <Link to=\"/contact\">\n        <h3>References are available upon request</h3>\n      </Link>\n    </div>\n  </div>\n);\n\nexport default References;\n","const degrees = [\n  {\n    school: 'Hack Reactor',\n    degree: 'Advanced Software Engineering Certificate',\n    link: 'https://www.hackreactor.com/learn-python-learn-javascript',\n    year: 2022,\n  },\n  {\n    school: 'Wheaton College',\n    degree: 'B.A. Media Communications',\n    link: 'https://wheaton.edu',\n    year: 2017,\n    relevantCoursework: 'Programming I: Problem Solving',\n  },\n  {\n    school: 'Tianjin University of Finance and Economics',\n    degree: 'Mandarin Chinese language study abroad intensive',\n    link: 'http://tjufe.admissions.cn/',\n    year: 2015,\n  },\n];\n\nexport default degrees;\n","const positions = [\n  {\n    company: 'Galvanize, Inc.',\n    position: 'Software Engineer, Immersive Resident',\n    link: 'https://www.galvanize.com/',\n    daterange: 'July 2022 - Present',\n    points: [\n      'Mentor 60 diverse engineers to encourage coding best practices, agile methodologies, and a growth mindset',\n      'Develop and maintain the curriculum website used by students and staff',\n      'Help students create projects incorporating Django, React, Docker, PostgreSQL, external APIs and CI/CD',\n    ],\n  },\n  {\n    company: 'Apple, Inc.',\n    position: 'Technical Expert',\n    link: 'https://apple.com',\n    daterange: 'October 2019 - March 2022',\n    points: [\n      'Led team with 100% iPhone repair success rate for six months via attention to detail, exceeding 93% expectation',\n      'Trained 15 junior technicians by shadowing and providing feedback, leading to a 10% session-per-hour increase',\n      'Maintained 95% customer satisfaction score for 10 months by accurately troubleshooting 1000+ iOS devices',\n    ],\n  },\n  {\n    company: 'Knowledge Tree, Inc.',\n    position: 'Executive Assistant',\n    daterange: 'September 2019 - April 2022',\n    points: [\n      'Visited 15 schools in southeast Asia annually to establish student acquisition partnerships with US universities',\n    ],\n  },\n  {\n    company: 'Theory of Media',\n    position: 'Co-Founder',\n    daterange: 'November 2019 - August 2020',\n    points: [\n      'Managed website design and company branding, ensuring consistent messaging to potential clients',\n      'Negotiated five marketing contracts with nonprofits and municipalities generating $40,000 in revenue',\n    ],\n  },\n  {\n    company: 'Various Clients',\n    position: 'Freelance Video Producer',\n    daterange: 'May 2017 - March 2020',\n    points: [\n      'Partnered with 25 business owners and universities to create promo material',\n      'Produced over 75 promo videos for Charlevoix Venetian Festival attended by 200,000 guests',\n    ],\n  },\n];\n\nexport default positions;\n","const projects = [\n  {\n    company: 'Packed',\n    position: 'Lead Software Engineer',\n    link: 'https://gitlab.com/packed-module-3/packed',\n    daterange: '2022',\n    points: [\n      'Led four engineer development team in creating and deploying a Django web application over six week period',\n      'Built three backend microservices following test-driven development',\n      'Integrated user authentication using Simple JWT',\n    ],\n  },\n  {\n    company: 'Car-Car',\n    position: 'Software Engineer',\n    link: 'https://gitlab.com/car-car/car-car',\n    daterange: '2022',\n    points: [\n      'Designed Django/React application employing 14 REST API endpoints',\n      'Deployed six Docker images on Heroku and Gitlab pages utilizing continuous deployment',\n      'Created three PostgreSQL databases that employ polling to share data between microservices',\n    ],\n  },\n  {\n    company: 'ConferenceGO',\n    position: 'Software Engineer',\n    link: 'https://gitlab.com/josiahpederson/conferencego',\n    daterange: '2022',\n    points: [\n      'Employed RabbitMQ pub/sub and middleware queueing between three microservices, resulting in 300% fewer database requests compared to the original polling method',\n      'Modernized Django monolith using domain-driven-design to divide bounded contexts into three microservices',\n      'Integrated three third-party APIs utilizing anti-corruption layers (ACLs) to ensure accurate data mapping',\n    ],\n  },\n];\n\nexport default projects;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Project = ({ data }) => (\n  <article className=\"jobs-container\">\n    <header>\n      <h4>\n        { data.link ? <a href={data.link}>{data.company}</a> : data.company } - {data.position}\n      </h4>\n      <p className=\"daterange\"> {data.daterange}</p>\n    </header>\n    <ul className=\"points\">\n      {data.points.map((point) => (\n        <li key={point}>{point}</li>\n      ))}\n    </ul>\n  </article>\n);\n\nProject.propTypes = {\n  data: PropTypes.shape({\n    link: PropTypes.string,\n    company: PropTypes.string.isRequired,\n    position: PropTypes.string.isRequired,\n    daterange: PropTypes.string.isRequired,\n    points: PropTypes.arrayOf(PropTypes.string).isRequired,\n  }).isRequired,\n};\n\nexport default Project;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Project from './Projects/Project';\n\nconst Proj = ({ data }) => (\n  <div className=\"experience\">\n    <div className=\"link-to\" id=\"experience\" />\n    <div className=\"title\">\n      <h3>Projects</h3>\n    </div>\n    {data.map((project) => (\n      <Project\n        data={project}\n        key={project.company}\n      />\n    ))}\n  </div>\n);\n\nProj.propTypes = {\n  data: PropTypes.arrayOf(PropTypes.shape({\n    company: PropTypes.string,\n    position: PropTypes.string,\n    link: PropTypes.string,\n    daterange: PropTypes.string,\n    points: PropTypes.arrayOf(PropTypes.string),\n  })),\n};\n\nProj.defaultProps = {\n  data: [],\n};\n\nexport default Proj;\n","import arrayWithoutHoles from \"./arrayWithoutHoles.js\";\nimport iterableToArray from \"./iterableToArray.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableSpread from \"./nonIterableSpread.js\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","// TODO: Add Athletic Skills, Office Skills,\n// Data Engineering, Data Science, ML Engineering, ... ?\n\nconst skills = [\n  {\n    title: 'Python',\n  },\n  {\n    title: 'Javascript',\n  },\n  {\n    title: 'Postgres/SQL',\n  },\n  {\n    title: 'React',\n  },\n  {\n    title: 'Django',\n  },\n  {\n    title: 'Docker',\n  },\n  {\n    title: 'Heroku',\n  },\n  {\n    title: 'HTML + CSS',\n  },\n  {\n    title: 'Bootstrap',\n  },\n  {\n    title: 'RabbitMQ',\n  },\n  {\n    title: 'Insomnia',\n  },\n  {\n    title: 'WebSockets',\n  },\n  {\n    title: 'Microservices',\n  },\n  {\n    title: 'Monoliths',\n  },\n  {\n    title: 'FastAPI',\n  },\n  {\n    title: 'MongoDB',\n  },\n  {\n    title: 'Domain-driven-design',\n  },\n  {\n    title: 'Git',\n  },\n  {\n    title: 'REST APIs',\n  },\n  {\n    title: 'Bash',\n  },\n\n].map((skill) => ({ ...skill, category: skill }));\n\n// this is a list of colors that I like. The length should be == to the\n// number of categories. Re-arrange this list until you find a pattern you like.\nconst colors = [\n  '#6968b3',\n  '#37b1f5',\n  '#40494e',\n  '#515dd4',\n  '#e47272',\n  '#cc7b94',\n  '#3896e2',\n  '#c3423f',\n  '#d75858',\n  '#747fff',\n  '#64cb7b',\n];\n\nconst categories = [\n  ...new Set(skills.reduce((acc, { category }) => acc.concat(category), [])),\n]\n  .sort()\n  .map((category, index) => ({\n    name: category,\n    color: colors[index],\n  }));\n\nexport { categories, skills };\n","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport Main from '../layouts/Main';\n\nimport Education from '../components/Resume/Education';\nimport Experience from '../components/Resume/Experience';\n// import Skills from '../components/Resume/Skills';\nimport Courses from '../components/Resume/Courses';\nimport References from '../components/Resume/References';\n\n// import courses from '../data/resume/courses';\nimport degrees from '../data/resume/degrees';\nimport positions from '../data/resume/positions';\nimport projects from '../data/resume/projects';\nimport Proj from '../components/Resume/Projects';\nimport { skills } from '../data/resume/skills';\nimport pdf from '../data/resume/JosiahPedersonResume.pdf';\n\nconst sections = [\n  'Experience',\n  'Projects',\n  'Skills',\n  'Education',\n  'References',\n];\n\nconst Resume = () => (\n  <Main\n    title=\"Resume\"\n    description=\"Josiah Pederson's Resume. Hack Reactor Software Engineering Immersive, Wheaton College, Apple, Inc.\"\n  >\n    <article className=\"post\" id=\"resume\">\n      <header>\n        <div className=\"title\">\n          <h2 data-testid=\"heading\"><Link to=\"resume\">Resume</Link></h2>\n          <p className=\"container\">\n            TL;DR? <a href={pdf} download>Download my resume</a>\n          </p>\n          <div className=\"link-container\">\n            {sections.map((sec) => (\n              <h4 key={sec}>\n                <a href={`#${sec.toLowerCase()}`}>{sec}</a>\n              </h4>))}\n          </div>\n\n        </div>\n      </header>\n      <Courses data={skills} />\n      <Proj data={projects} />\n      <Experience data={positions} />\n      <Education data={degrees} />\n      {/* <Skills skills={skills} categories={categories} /> */}\n      <References />\n\n    </article>\n  </Main>\n);\n\nexport default Resume;\n","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import defineProperty from \"./defineProperty.js\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n\n  return target;\n}"],"names":["data","className","degree","href","link","school","year","Education","id","map","defaultProps","company","position","daterange","points","point","Experience","job","Course","last","title","Courses","courses","sort","a","b","ret","university","number","course","idx","length","to","relevantCoursework","Proj","project","arr","skills","skill","category","colors","Set","reduce","acc","concat","Array","isArray","arrayLikeToArray","iter","Symbol","iterator","from","unsupportedIterableToArray","TypeError","index","name","color","sections","Main","description","pdf","download","sec","toLowerCase","projects","positions","degrees","_defineProperty","obj","key","value","Object","defineProperty","enumerable","configurable","writable","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","push","apply","_objectSpread2","target","i","arguments","source","forEach","getOwnPropertyDescriptors","defineProperties"],"sourceRoot":""}